

# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Open Doc
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
- name: Log
  shell: |
    export MESSAGE=" 🌏 Open CP4WAIOps"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: true

- name: ❇️❇️❇️ OCP CONSOLE - Create Openshift NOTIFICATION
  shell: |
    cat <<EOF | oc apply -f -
    apiVersion: console.openshift.io/v1
    kind: ConsoleNotification
    metadata:
      name: cp4waiops-notification
    spec:
      backgroundColor: '#ffd500'
      color: '#000'
      location: {{global_config.position_ocp_notifications | default("BannerBottom")}}
      text: 'Installing {{current_cp4waiops_feature.kind}} - Open CP4WAIOps'    
    EOF
  ignore_errors: true
  when: global_config.create_ocp_notifications | default(true) == true  




- name: 🌏 CP4WAIOPS - Get CP4WAIOPS LOGINS
  shell: |
    export WAIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')
    export CP4WAIOPS_ROUTE=$(oc get route -n $WAIOPS_NAMESPACE cpd -o jsonpath={.spec.host})
    echo "                🌏 URL:      https://$CP4WAIOPS_ROUTE"
    echo ""
    echo "                🧑 User:     $(oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_username}' | base64 --decode && echo)"
    echo "                🔐 Password: $(oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 --decode)"

    export URL=https://$CP4WAIOPS_ROUTE
    if [ -x "$(command -v open)" ]; then
      open $URL
    else 
      if [ -x "$(command -v firefox)" ]; then
        firefox $URL
      else 
        if [ -x "$(command -v google-chrome)" ]; then
          google-chrome $URL
        fi
      fi
    fi
  ignore_errors: true
  register: LOGINS


- name: 🌏 CP4WAIOPS - CP4WAIOPS LOGINS
  debug: 
    var: LOGINS.stdout_lines


- name: Log
  shell: |
    export MESSAGE=" 🕦 Wait for CP4WAIOps to become ready"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "              📥 CP4WAIOps Login:"  >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "                🌏 URL:      https://$(oc get route -n {{ current_cp4waiops_cluster.project }} cpd -o jsonpath={.spec.host})"  >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "                🧑 User:     $(oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_username}' | base64 --decode && echo)" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "                🔐 Password: $(oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 --decode)" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log

  ignore_errors: true
